
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - database
    networks:
      - app_network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

  database:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
